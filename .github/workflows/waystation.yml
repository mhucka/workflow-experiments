# =============================================================================
# @file    waystation.yml
# @brief   GitHub Actions workflow for archiving a project's GitHub Pages URL
# @author  Michael Hucka <mhucka@caltech.edu>
# @license Please see the file named LICENSE in the repository
# @repo    https://github.com/caltechlibrary/waystation
# =============================================================================

name: "Waystation"
run-name: "Archive GitHub Pages for ${{ github.repository }}"

on:
  workflow_call:
    inputs:
      dry_run:
        description: 'Print what would be done without actually doing it.'
        type: boolean
        default: true
        required: false
      save_errors:
        description: ''
        type: boolean
        default: false
        required: false
      save_outlinks:
        description: ''
        type: boolean
        default: false
        required: false
      save_screenshots:
        description: ''
        type: boolean
        default: false
        required: false
      debug:
        description: 'Dump GitHub Actions context data.'
        type: boolean
        default: false
        required: false

jobs:
  Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Get GitHub Pages URL.
        # This stores the URL in env.pages_url. The value will be "null" if
        # no pages URL is returned for any reason.
        id: s1
        run: |
          echo pages_url=$(curl -s -H 'Accept: application/vnd.github+json' -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/caltechlibrary/dibs/pages | jq '.html_url' | tr -d '"') >> $GITHUB_ENV

      - name: Dump GitHub Actions context and variables if debugging is on.
        id: s2
        if: inputs.debug == true || inputs.debug == 'true'
        env:
          # Setting this variable and then printing it below is not strictly
          # necessary; you could put the expression directly into the echo
          # command below. But when I do that, I get a doubling of the output.
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo "dry_run = ${{ inputs.dry_run }}"
          echo "pages_url = ${{ env.pages_url }}"
          echo "save_errors = ${{ inputs.save_errors }}"
          echo "save_outlinks = ${{ inputs.save_outlinks }}"
          echo "save_screenshots = ${{ inputs.save_screenshots }}"
          echo "debug = ${{ inputs.debug }}"
          echo "====================="
          echo "$GITHUB_CONTEXT"

      - name: Quit if GitHub Pages URL is null.
        id: s3
        if: startsWith(env.pages_url, 'null') == true
        uses: actions/github-script@v6.3.3
        with:
          script: |
            core.setFailed("Could not retrieve GitHub Pages URL for repository ${{ github.repository }}.")

      - name: Proceed if this is not a dry run.
        id: s4
        if: startsWith(env.pages_url, 'null') != true && inputs.dry_run != true && inputs.dry_run != 'true'
        uses: JamieMagee/wayback@v1.3.19
        with:
          url: ${{ env.pages_url }}
          saveErrors: ${{ env.save_errors }}

      - name: Summarize the results of the run.
        id: s5
        run: |
          echo \#\# Results of sending the GitHub Pages to the Wayback Machine >> $GITHUB_STEP_SUMMARY
          echo Dry run: ${{ inputs.dry_run }}                                  >> $GITHUB_STEP_SUMMARY
          echo GitHub repository for this action: \`${{ github.repository }}\` >> $GITHUB_STEP_SUMMARY
          echo GitHub Pages URL for the repository: ${{ env.pages_url }}       >> $GITHUB_STEP_SUMMARY
          echo URL in the Wayback Machine: ${{ steps.s4.outputs.wayback_url }} >> $GITHUB_STEP_SUMMARY
          echo Date and time of execution: $(date "+%F %T (%Z)")               >> $GITHUB_STEP_SUMMARY
