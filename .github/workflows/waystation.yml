# =============================================================================
# @file    waystation.yml
# @brief   GitHub Actions workflow for archiving a project's GitHub Pages URL
# @author  Michael Hucka <mhucka@caltech.edu>
# @license Please see the file named LICENSE in the repository
# @repo    https://github.com/caltechlibrary/waystation
# =============================================================================

name: "Waystation"
run-name: "Archive GitHub Pages for ${{ github.repository }}"

on:
  workflow_call:
    inputs:
      dry_run:
        description: 'Print what would be done without actually doing it.'
        type: boolean
        default: true
        required: false
      save_errors:
        description: ''
        type: boolean
        default: false
        required: false
      save_outlinks:
        description: ''
        type: boolean
        default: false
        required: false
      save_screenshots:
        description: ''
        type: boolean
        default: false
        required: false
      debug:
        description: 'Dump GitHub Actions context data.'
        type: boolean
        default: false
        required: false

jobs:
  Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Get GitHub pages URL
        # This stores the URL in env.PAGES_URL. The value will be "null" if
        # no pages URL is returned for any reason. Note: the URL string will
        # have double quotes around it.
        id: s1
        run: |
          echo pages_url=$(curl -s -H 'Accept: application/vnd.github+json' -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/pages | jq '.html_url' | tr -d '"') >> $GITHUB_ENV

      - name: Quit if GitHub pages URL is null
        id: s2
        if: startsWith(env.pages_url, 'null')
        uses: actions/github-script@v6.3.3
        with:
          script: |
            core.setFailed('Could not retrieve GitHub pages URL.')        

      - name: Proceed if this is not a dry run
        id: s3
        if: startsWith(env.pages_url, 'null') != true && ${{ inputs.dry_run != true }} && ${{ inputs.dry_run != 'true' }}
        uses: JamieMagee/wayback@v1.3.19
        with:
          url: ${{ env.pages_url }}
          # saveErrors: ${{ env.save_errors }}
          # saveOutlinks: ${{ env.save_outlinks }}
          # saveScreenshot: ${{ env.save_screenshots }}

      - name: Summarize the results of the run
        id: s5
        run: |
          echo \#\# Results of sending the GitHub Pages to the Wayback Machine >> $GITHUB_STEP_SUMMARY
          echo Date and time of execution: $(date "+%F %T (%Z)")               >> $GITHUB_STEP_SUMMARY
          echo This was ${{ env.not_dry_run }} a dry run.                      >> $GITHUB_STEP_SUMMARY
          echo GitHub repository for this action: \`${{ github.repository }}\` >> $GITHUB_STEP_SUMMARY
          echo GitHub Pages URL for the repository: ${{ env.pages_url }}       >> $GITHUB_STEP_SUMMARY
          echo URL in the Wayback Machine: ${{ steps.s3.outputs.wayback_url }} >> $GITHUB_STEP_SUMMARY

      - name: Dump GitHub context and environment if debugging is on
        id: s6
        if: ${{ inputs.debug == true }} || ${{ inputs.debug == 'true' }}
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo not_dry_run="not" >> $GITHUB_ENV
          : dry_run=${{ inputs.dry_run }}
          : save_errors=${{ inputs.save_errors }}
          : save_outlinks=${{ inputs.save_outlinks }}
          : save_screenshots=${{ inputs.save_screenshots }}
          : debug=${{ inputs.debug }}
          echo "====================="
          echo "$GITHUB_CONTEXT"
